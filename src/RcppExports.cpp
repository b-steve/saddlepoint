// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/saddlepoint_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// tvec_hat_for_ad
ADrep tvec_hat_for_ad(ADrep theta, vec tvec, vec observations, SEXP K1_fn, SEXP K2_solve_fn);
RcppExport SEXP _saddlepoint_tvec_hat_for_ad(SEXP thetaSEXP, SEXP tvecSEXP, SEXP observationsSEXP, SEXP K1_fnSEXP, SEXP K2_solve_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ADrep >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< vec >::type tvec(tvecSEXP);
    Rcpp::traits::input_parameter< vec >::type observations(observationsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type K1_fn(K1_fnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type K2_solve_fn(K2_solve_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(tvec_hat_for_ad(theta, tvec, observations, K1_fn, K2_solve_fn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_saddlepoint_tvec_hat_for_ad", (DL_FUNC) &_saddlepoint_tvec_hat_for_ad, 5},
    {NULL, NULL, 0}
};

void rtmb_set_shared_pointers();
RcppExport void R_init_saddlepoint(DllInfo *dll) {
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  rtmb_set_shared_pointers();
}
