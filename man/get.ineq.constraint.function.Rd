% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization-functions.R
\name{get.ineq.constraint.function}
\alias{get.ineq.constraint.function}
\title{Create the inequality constraint function}
\usage{
get.ineq.constraint.function(
  tvec,
  theta,
  cgf,
  user.ineq.constraint.function = NULL
)
}
\arguments{
\item{tvec}{A numeric vector.}

\item{theta}{A numeric vector.}

\item{cgf}{An object of class 'CGF'.}

\item{user.ineq.constraint.function}{An optional additional inequality added by a user. Default is NULL. See TO DO list.}
}
\value{
A function that takes a vector \code{a} as an argument. This function returns either NULL or a list with 'constraints' and 'jacobian'.
}
\description{
This function wraps and returns an inequality constraint function of the form \code{function(a) \{...\}}, where 'a' combines \code{tvec} and \code{theta} arguments to a single vector, in that order.
}
\details{
This function constructs and integrates an inequality constraint based on \code{cgf}
with any user-defined inequality constraint function specified in \code{user.ineq.constraint.function}.
If \code{user.ineq.constraint.function} is \code{NULL}, the function checks whether the \code{cgf} itself
includes an inherent inequality constraint.
}
\examples{
\dontrun{
TO DO: Add a working example
  f <- get.ineq_constraint.function(tvec, theta, cgf)
  f(c(tvec, theta)) # returns a list of the form list(constraints = , jacobian = ) or NULL
}
}
