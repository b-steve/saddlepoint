% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/B-compute-spa-negll.R
\name{compute.spa.negll}
\alias{compute.spa.negll}
\title{Compute saddlepoint approximation-based negative log-likelihood}
\usage{
compute.spa.negll(
  parameter_vector,
  observed.data,
  cgf,
  tvec.hat = NULL,
  gradient = FALSE,
  hessian = FALSE,
  ...
)
}
\arguments{
\item{parameter_vector}{Numeric vector of parameters.}

\item{observed.data}{Numeric vector of observed data.}

\item{cgf}{A \code{CGF} object.}

\item{tvec.hat}{(Optional) Numeric vector. If supplied, \code{tvec} is taken directly as this vector.}

\item{gradient}{Logical. If \code{TRUE}, the gradient is computed; if \code{FALSE}, it is not returned. Defaults to \code{FALSE}.}

\item{hessian}{Logical. If \code{TRUE}, the Hessian is computed; if \code{FALSE}, a \code{NULL} is returned in its place.}

\item{...}{Further arguments passed to \code{saddlepoint.solve()} (if needed).}
}
\value{
A named list with elements:
\describe{
\item{vals}{Numeric scalar. The negative log-likelihood at \code{parameter_vector}.}
\item{gradient}{Numeric vector. The gradient at \code{parameter_vector}, if \code{gradient=TRUE}.}
\item{hessian}{The Hessian at \code{parameter_vector}, if \code{hessian=TRUE}.}
}
}
\description{
Computes the saddlepoint-based negative log-likelihood for given parameters and data using one of the these:
\itemize{
\item \strong{User-Provided \code{tvec.hat}:} If \code{tvec.hat} is supplied, it is used directly.
\item \strong{Analytic \code{tvec.hat}:} If the \code{CGF} object provides an analytic solution via \code{analytic_tvec_hat()}, it is utilized.
\item \strong{Saddlepoint Solver:} Otherwise, a numeric solution is obtained using \code{saddlepoint.solve()}.
}

Internally, this function creates a tape (via RTMB's \code{MakeTape}) for the negative log-likelihood with respect to the parameter vector,
and returns the evaluated negative log-likelihood, the gradient, and optionally the Hessian.
}
\seealso{
\code{\link{saddlepoint.solve}}, \code{\link{compute.zeroth.order.spa.negll}}
}
