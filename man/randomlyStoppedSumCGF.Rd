% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/D-RandomlyStoppedSumCGF.R
\name{randomlyStoppedSumCGF}
\alias{randomlyStoppedSumCGF}
\title{CGF Object for a Randomly-Stopped Sum}
\usage{
randomlyStoppedSumCGF(
  count_cgf,
  summand_cgf,
  block_size = NULL,
  iidReps = NULL,
  adaptor = NULL,
  ...
)
}
\arguments{
\item{count_cgf}{A \code{CGF} object corresponding to the random variable \eqn{N} in the sum \deqn{{\tilde{Y} = \sum_{i=1}^{N} \tilde{X}_i}}}

\item{summand_cgf}{A \code{CGF} object corresponding to the summand random variables \eqn{X_i} in the sum \deqn{{\tilde{Y} = \sum_{i=1}^{N} \tilde{X}_i}}}

\item{block_size}{Either \code{NULL} or a positive integer specifying the size of each block
for i.i.d. replication. Defaults to \code{NULL}.}

\item{iidReps}{Either \code{NULL} or a positive integer specifying how many i.i.d. blocks
to expect. Defaults to \code{NULL}.}

\item{adaptor}{Optional function mapping a global parameter vector \eqn{\theta}
to the parameters used by the resulting object. Defaults behavior is no transformation.}

\item{...}{Additional named arguments passed to CGF creation functions.}
}
\value{
A \code{CGF} object representing the distribution of \eqn{\sum_{i=1}^N X_i}.
}
\description{
Constructs the CGF object for a randomly stopped sum \eqn{\tilde{Y} = \sum_{i=1}^{N} \tilde{X}_i}{Y = sum(X[1], X[2], ..., X[N])}.
\eqn{\tilde{X}_i} are i.i.d. random variables independent of \eqn{N}, which is a non-negative integer-valued random variable.
}
\details{
\strong{Setup}:
\deqn{{\tilde{Y} = \sum_{i=1}^{N} \tilde{X}_i}}
The random variable \eqn{\tilde{Y}} is computed as the sum of \eqn{N} i.i.d copies of the random vector \eqn{\tilde{X}_i}. Each \eqn{\tilde{X}_i} is a random vector of arbitrary dimension \eqn{d}.
For example, when \eqn{d=3}:
\deqn{ \tilde{X_1} = (X_{11}, X_{12}, X_{13}) }
\deqn{ \tilde{X_2} = (X_{21}, X_{22}, X_{23}) }
\deqn{ ... }
\deqn{ \tilde{X_N} = (X_{N1}, X_{N2}, X_{N3}) }
Here, \eqn{X_{i1}, X_{i2}, X_{i3}} are scalars but the vectors \eqn{\tilde{X_i}} are i.i.d copies.

\strong{Replication}: If \code{block_size} or \code{iidReps} is specified, we apply
an internal \code{\link{iidReplicatesCGF}} to replicate this CGF in blocks.
Only one of \code{block_size} or \code{iidReps} should be specified.
If both \code{iidReps} and \code{block_size} are \code{NULL}, no replication is performed;

\strong{Adaptor}: If \code{adaptor} is specified as a function of the form \code{function(theta) ...},
the resulting CGF will then be usable with a global parameter vector \code{theta}. See the example \code{\link{sumOfIndependentCGF}} for more details.
}
\examples{
\dontrun{
# For example, let count_cgf be the CGF of N ~ Poisson(lambdaN),
# and summand_cgf be the CGF of X ~ Gamma(shape, rate).
# Then Y = sum_{i=1..N} X_i is a compound Poisson-Gamma distribution.

# Basic usage:
# cgf_Y <- randomlyStoppedSumCGF(count_cgf = PoissonCGF, summand_cgf = GammaCGF)

# If you want i.i.d. blocks or param adaptor, pass block_size or iidReps, etc.

}
}
