% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConcatenationCGF.R
\name{concatenationCGF}
\alias{concatenationCGF}
\title{Concatenation of CGF objects.}
\usage{
concatenationCGF(
  cgf_list,
  block_sizes,
  iidReps = 1,
  adaptor = function(x) x,
  ...
)
}
\arguments{
\item{cgf_list}{A list of CGF objects, each inheriting from class \code{"CGF"}.}

\item{block_sizes}{An integer vector, same length as \code{cgf_list}, specifying how many
components of \code{tvec} each CGF expects.}

\item{iidReps}{A positive integer. If greater than 1, replicates the resulting CGF \code{iidReps} times. Defaults to 1.}

\item{adaptor}{A function(\code{theta}) -> numeric vector, transforming model parameter vector
\code{theta} into what the resulting CGF object expects. By default, the identity function.}

\item{...}{Additional named arguments passed to \code{\link{createCGF}},
or to \code{\link{iidReplicatesCGF}} if \code{iidReps>1}.}
}
\value{
A CGF object.
}
\description{
Constructs a CGF object for a concatenated vector of independent random variables,
with each represented by its respective CGF object and a corresponding dimension.
This means CGF \code{cgf_list[[i]]} sees \code{block_sizes[i]} consecutive components of \code{tvec}.
It facilitates the modeling of a concatenated random vector,
where each segment of the vector is specified by its CGF object and a corresponding dimension.
}
\examples{
\dontrun{
# Suppose we have two CGFs with dimension 3 and 2, respectively:
# CGF1 sees tvec of length=3, CGF2 sees tvec of length=2
# We want to form a blockwise CGF with dimension=3+2=5.

cgf_obj1 <- someCGF_dim3
cgf_obj2 <- someCGF_dim2
# Then:
concat_cgf <- concatenateBlockwiseCGF(
  cgf_list = list(cgf_obj1, cgf_obj2),
  block_sizes = c(3,2)
)

# Evaluate K at tvec of length=5
tvec_example <- c(0.1, -0.2, 0.05, 0.5, 0.4)
concat_cgf$K(tvec_example, param=c(...))

# If we want i.i.d. replicates of that block structure => dimension= 5*iidReps
concat_cgf2 <- concatenateBlockwiseCGF(
  cgf_list = list(cgf_obj1, cgf_obj2),
  block_sizes = c(3,2),
  iidReps = 2
)
# Now tvec must be length=10, etc.
}
}
\seealso{
\code{\link{iidReplicatesCGF}}, \code{\link{sumOfIndependentCGF}}
}
