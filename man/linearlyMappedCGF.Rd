% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/D-LinearlyMappedCGF.R
\name{linearlyMappedCGF}
\alias{linearlyMappedCGF}
\title{CGF Object of a linearly mapped random variable (Y = A X)}
\usage{
linearlyMappedCGF(cgf, matrix_A, iidReps = 1, ...)
}
\arguments{
\item{cgf}{An object of class \code{CGF} for the base distribution \eqn{X}.}

\item{matrix_A}{Either a numeric matrix (dense or sparse), or a function:
\code{function(param) -> numeric matrix}.}

\item{iidReps}{Integer. The number of IID replicate blocks to create.
Must be a positive integer. If \code{iidReps = 1}, it behaves as a single
linearly mapped CGF with no repetition.}

\item{...}{Additional arguments passed to \code{\link{createCGF}} or possibly
to \code{\link{iidReplicatesCGF}} if \code{iidReps > 1}.}
}
\value{
A \code{CGF} object for \eqn{Y = A X}.
}
\description{
Creates a CGF object for the random vector \eqn{Y = A(\theta) \, X}, where
\eqn{X} is described by the input CGF \code{cgf}. The argument \code{matrix_A} can be:
\itemize{
\item \strong{A numeric matrix} (dense or sparse).
\item \strong{A function}: \eqn{\theta \mapsto A(\theta)} returning a numeric matrix.
}

If \code{matrix_A} is a function, it is called for each invocation of the CGF
methods to retrieve the current matrix (allowing parameter-dependent transformations).

Internally, if \code{iidReps == 1} (the default), you get a single-block
linear mapping. If \code{iidReps > 1}, we build the single-block version
and then call \code{\link{iidReplicatesCGF}} to replicate that block logic.

When \code{iidReps > 1}, we treat the input dimension
as \code{iidReps} repeated blocks. Each block is multiplied by the same matrix \eqn{A}
and forwarded to the underlying \code{cgf}.
}
