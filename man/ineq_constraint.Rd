% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/saddlepoint-functions.R
\name{ineq_constraint}
\alias{ineq_constraint}
\title{Compute tvec-related constraints for a CGF Object}
\usage{
ineq_constraint(tvec, parameter.vector, baseCGF)
}
\arguments{
\item{tvec}{A numeric vector representing 't' values.}

\item{parameter.vector}{A numeric vector of parameters.}

\item{baseCGF}{A 'CGF' object.}
}
\value{
A numeric vector of 'tvec' related constraints. An empty vector if no constraints on 'tvec'.
}
\description{
The function computes constraints for the argument 'tvec' under a given CGF object, expressed in a form of inequalities that should be less than 0.
}
\examples{
\dontrun{
# Create a Geometric CGF object as a function of probability parameter 'p'.
# By definition, this CGF is valid for 't < -log(1 - p)'
# Fix 'p' at 0.5, so the domain of the CGF is constrained to 't < -log(0.5)'.

# Compute constraints for the Geometric CGF object. The function 'ineq_constraint'
# will transform the domain restriction 't < -log(0.5)' into the equivalent form
# 't + log(0.5) < 0'. Hence, for each 't' value in 'tvec', we get an inequality
# 't + log(0.5)'.
ineq_constraint(tvec = c(0.1, 0.2), parameter.vector = 0.5, baseCGF = GeometricCGF)
}
}
