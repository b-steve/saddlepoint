% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SumOfiidCGF.R
\name{sumOfiidCGF}
\alias{sumOfiidCGF}
\title{Create a CGF object for the sum of \code{n} i.i.d. random variables.}
\usage{
sumOfiidCGF(cgf, n, iidReps = 1, adaptor = function(x) x, ...)
}
\arguments{
\item{cgf}{A CGF object describing one copy of X.
Must be of class \code{"CGF"}.}

\item{n}{A positive integer specifying the number of i.i.d. copies to sum.}

\item{iidReps}{A positive integer. If greater than 1, replicates the resulting CGF \code{iidReps} times. Defaults to 1.}

\item{adaptor}{A function(\code{theta}) -> numeric vector, transforming model parameter vector
\code{theta} into what the resulting CGF object expects. By default, the identity function.}

\item{...}{Further named arguments to pass to \code{\link{createCGF}} if needed.}
}
\value{
A new CGF object describing Y = sum of n i.i.d. copies of X.
}
\description{
Given a base CGF object \code{cgf} describing a random variable X,
this function returns a new CGF object for the sum of \code{n} i.i.d. copies of X,
i.e. \code{Y = X1 + X2 + ... + Xn}.
}
\examples{
\dontrun{
# Example: If 'cgf' describes a single Poisson(\lambda),
# then sumOfiidCGF(cgf, n=5) describes Poisson(5*lambda).

# Evaluate K, K1, etc. on the new object at t=0.1
new_cgf <- sumOfiidCGF(cgf, n=5)
new_cgf$K(0.1, param= c(...)) # => 5 times the old K(0.1)
}
}
